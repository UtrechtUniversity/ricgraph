# ########################################################################
#
# Ricgraph - Research in context graph
#
# ########################################################################
#
# MIT License
# 
# Copyright (c) 2023, 2024 Rik D.T. Janssen
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# ########################################################################
#
# This file is the initialization file for Ricgraph. 
# Original version Rik D.T. Janssen, December 2022.
# Updated Rik D.T. Janssen, April 2023, April 2024.
#
# ########################################################################
# 
# Ricgraph uses the term 'organization abbreviation'.
# This is a string of a few letters that can be passed to some harvest
# scripts to determine for which organisation such a script will harvest
# data.  Examples are UU, UMCU, DUT, EUR, etc, see below.
#
# You will see this in keys such as 'organization_name_UU' or
# 'organization_name_UMCU'. The general format is 'key_XXXX,' with 'XXXX' 
# the 'organization abbreviation'.
#
# If your organization abbreviation is not in this file, feel free to add one. 
# You can take any (short) string and pass it to a harvest script. You only
# need to insert keys (and values) for the organizations you are planning
# to harvest.
#
# ########################################################################


[Ricgraph]
# ###############################################################
# All nodes have the following standard properties:
# name: name of the node, e.g. ISNI, ORCID, DOI, etc.
# category: category of the node, e.g. person, person-root, book, 
#	    journal article, data set, etc.
# value: value of the node
# _key: key value of the node, not to be modified by the user
# _source: sorted list of sources a record has been harvested from, 
#	   not to be modified by the user
# _history: list of history events of the node, not to be modified by the user
#
# Do not change these two entries. Don't use spaces, quotes or new lines.
ricgraph_properties_standard = name,category,value
ricgraph_properties_hidden = _key,_source,_history
# ###############################################################

# ###############################################################
# Additional properties for nodes, make sure 'history_event' is last.
# Don't use spaces, quotes or new lines in this entry.
ricgraph_properties_additional = comment,url_main,url_other,year,source_event,history_event
# ###############################################################

# ###############################################################
# Ricgraph has two modes to add nodes.
# Your choice will influence the way nodes are added to Ricgraph.
# For an explanation how this works, see
# file docs/ricgraph_install_configure.md, section RICGRAPH_NODEADD_MODE.
# Possible values: strict, lenient. Choose one of these, don't use quotes.
#ricgraph_nodeadd_mode = lenient
ricgraph_nodeadd_mode = strict
# ###############################################################


[Organization]
# ###############################################################
# Information about your organization.
# Add your own 'organization abbreviation' if it is not present.
# Format: organization_name_XXXX with 'XXXX' the organization abbreviation.
# You only need key and value for the organization(s) you are planning
# to harvest.
# The name of your organization (without quotes):
organization_name_UU = Utrecht University
organization_name_UMCU = University Medical Center Utrecht
organization_name_DUT = Delft University of Technology
organization_name_EUR = Erasmus University Rotterdam
organization_name_EUT = Eindhoven University of Technology
organization_name_UG = University of Groningen
organization_name_VU = Vrije Universiteit Amsterdam
#
# ROR is a global open persistent identifier for research organizations.
# Find yours on https://ror.org. 
# Add your own 'organization abbreviation' if it is not present. You only 
# need key and value for the organization(s) you are planning to harvest.
# The ROR of your organization (without quotes and without 'https://ror.org/'):
organization_ror_UU = 
organization_ror_UMCU = 
organization_ror_DUT = 
organization_ror_EUR = 
organization_ror_EUT = 
organization_ror_UG = 
organization_ror_VU = 
# ###############################################################


[GraphDB]
# ###############################################################
# You can use various graph databases as backend. This section 
# lists the configuration parameters for each graph database.
# Fill the parameters for the graph database you use, and
# specify the name of that database in this parameter:
graphdb = neo4j
# graphdb = memgraph
# ###############################################################

# ###############################################################
# Neo4j graph database backend, https://neo4j.com.
# ###############################################################
# For both Neo4j Desktop and Neo4j Community Editions, fill these:
graphdb_hostname = localhost
graphdb_databasename = neo4j
graphdb_user = neo4j
# Default password for Neo4j is 'neo4j' (without quotes).
graphdb_password =

# ### These additional parameters are for Neo4j Desktop ###
# Neo4j desktop may tell you which port to use, default is 7687.
graphdb_scheme = bolt
graphdb_port = 7687
# ### End of additional parameters for Neo4j Desktop ###
# ### These additional parameters are for Neo4j Community Edition ###
#graphdb_scheme = neo4j
#graphdb_port = 7687
# ### End of additional parameters for Neo4j Community Edition ###
# ###############################################################

# ###############################################################
# Memgraph graph database backend, https://memgraph.com.
# ###############################################################
# For Memgraph Platform, or the individual Memgraph packages, fill these:
#graphdb_hostname = localhost
#graphdb_databasename = memgraph
#graphdb_user = memgraph
# Default password for Memgraph is 'memgraph' (without quotes).
##graphdb_password =
##graphdb_scheme = bolt
##graphdb_port = 7687
# ###############################################################


[Pure_harvesting]
# ###############################################################
# The URL to Pure portal.
# Add your own 'organization abbreviation' if it is not present.
# Format: pure_url_XXXX with 'XXXX' the organization abbreviation.
# You only need key and value for the organization(s) you are planning
# to harvest.
# Your URL to Pure portal (without quotes):
pure_url_UU = 
pure_url_UMCU =
pure_url_DUT =
pure_url_EUR =
pure_url_EUT =
pure_url_UG =
pure_url_VU =
#
# You can obtain a Pure API key from your local Pure admin.
# Add your own 'organization abbreviation' if it is not present. You only 
# need key and value for the organization(s) you are planning to harvest.
# Your Pure API key (without quotes):
pure_api_key_UU = 
pure_api_key_UMCU =
pure_api_key_DUT =
pure_api_key_EUR =
pure_api_key_EUT =
pure_api_key_UG =
pure_api_key_VU =
# ###############################################################


[Yoda_harvesting]
# ###############################################################
# With the following settings you will harvest data sets
# from Yoda, Utrecht University's data repository. 
# They will be harvested from DataCite.
# The URL to Yoda Datacite harvest (without quotes):
yoda_url = https://oai.datacite.org/oai
#
# The set to harvest (without quotes):
yoda_set_UU = delft.uu
# UU Yoda at SURF, pilot:
yoda_set_UUSURF = pzax.sxgsah
yoda_set_UMCU =
yoda_set_DUT =
yoda_set_EUR =
yoda_set_EUT =
yoda_set_UG =
yoda_set_VU = delft.vudata
# ###############################################################

 
[RSD_harvesting]
# ###############################################################
# With the following settings you will harvest software
# from the Research Software Directory.
# The URL to the Research Software Directory harvest (without quotes):
rsd_url = https://research-software-directory.org
#
# Add your own 'organization abbreviation' if it is not present.
# Format: rsd_organization_XXXX with 'XXXX' the organization abbreviation.
# You only need key and value for the organization(s) you are planning
# to harvest.
# The organization to harvest (without quotes):
rsd_organization_UU = utrecht-university
rsd_organization_UMCU = university-medical-center-utrecht
rsd_organization_DUT = delft-university-of-technology
rsd_organization_EUR = erasmus-university-rotterdam
rsd_organization_EUT = eindhoven-university-of-technology
rsd_organization_UG = university-of-groningen
rsd_organization_VU = vu-university-amsterdam
# ###############################################################


[UU_staff_pages_harvesting]
# ###############################################################
# With the following settings you will harvest Utrecht University 
# staff pages.
# The URL to the API of the UU staff pages (without quotes):
uustaff_url = 
# ###############################################################


[OpenAlex_harvesting]
# ###############################################################
# OpenAlex is a "fully open catalog of the global research system",
# https://docs.openalex.org.
# The URL to the API of OpenAlex (without quotes):
openalex_url = https://api.openalex.org
#
# OpenAlex doesn't require authentication, you can join a "polite pool" 
# which offers faster and consistent response times, see
# https://docs.openalex.org/how-to-use-the-api/rate-limits-and-authentication#the-polite-pool
# Your email address (without quotes):
openalex_polite_pool_email = 
#
# For OpenAlex, you also need to set parameters in the
# [Organization] section of this file.
# ###############################################################


[Scopus_harvesting]
# ###############################################################
# You can obtain a Scopus API key from the Elsevier Developer Portal, 
# "Request an API key", https://dev.elsevier.com.
# This key will only give you "on campus" access to the Elsevier API.
# Your Scopus API key (without quotes):
scopus_api_key = 
#
# If you need off campus access (e.g. from home), you'll need a
# "Scopus Institutional Token". You can request this from Elsevier using the
# email contact button on 
# https://service.elsevier.com/app/home/supporthub/dataasaservice.
# Your Scopus Institutional Token (without quotes):
scopus_institutional_token = 
# ###############################################################

